package org.core;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketAddress;

/**
 * @date 2022-3-18
 * @author bobee
 */
public class BootStrap{
	/**
	 * 服务器启动类入口: 
	 */
	public static void main(String[] args) {
		//在18080端口上去监听
		int port = 18080;
		int backlog = 10;
		try {
			//判断端口是否可用
			//ServerSocket可以端口监听; backlog设置等待连接列表的限制（accept才会从中取出来）不要随便for循环
			ServerSocket ss = new ServerSocket(port, backlog);
//			ss.setReuseAddress(true); 重启服务器之后马上就可以用
			while(true) {
				Socket s = ss.accept();
				InputStream in = s.getInputStream();//读取输入字节流
				byte[] buffer = new byte[1024];
				in.read(buffer); //因为readAll是阻塞的，先只读一部分，看一下HTTP首部
				String sbuffer = new String(buffer, "utf-8");
				System.out.print("socket接收到的数据：" + sbuffer);
				
				//返回一个输出流
				OutputStream out = s.getOutputStream();
				String response = "HTTP/1.1 200 OK\r\n" + "Content-Type: text/html\r\n\r\n";
				response += "Hello, this is MyWebServer";
				out.write(response.getBytes());
				out.flush(); //只是一个传输标志，没有任何实际代码
				s.close();
				sleep(10);
			}
		}catch(IOException e) {
			System.out.print("端口占用异常 socket bind failed");
		}finally{
		}
	}
}